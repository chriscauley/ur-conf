# Generated by Django 2.1.2 on 2018-11-09 16:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('main', '0003_talkattendance_modofied'),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(choices=[('vote_one', 'vote_one'), ('vote_all', 'vote_all'), ('attend_one', 'attend_one'), ('attend_all', 'attend_all'), ('all_yes', 'all_yes'), ('all_maybe', 'all_maybe'), ('all_no', 'all_no'), ('all_yesno', 'all_yesno'), ('all_yesmaybe', 'all_yesmaybe'), ('all_maybeno', 'all_maybeno')], max_length=16)),
                ('title', models.CharField(max_length=64)),
                ('description', models.CharField(max_length=128)),
                ('class_name', models.CharField(max_length=32)),
                ('order', models.IntegerField(default=999)),
            ],
            options={
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Achievement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='talk',
            name='sortable',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='talk',
            name='authors',
            field=models.ManyToManyField(blank=True, to='main.Author'),
        ),
        migrations.AlterUniqueTogether(
            name='userachievement',
            unique_together={('user', 'achievement')},
        ),
    ]
